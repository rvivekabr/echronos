<?xml version="1.0" encoding="UTF-8" ?>
<!--
     eChronos Real-Time Operating System
     Copyright (c) 2018, Commonwealth Scientific and Industrial Research
     Organisation (CSIRO) ABN 41 687 119 230.

     All rights reserved. CSIRO is willing to grant you a licence to the eChronos
     real-time operating system under the terms of the CSIRO_BSD_MIT license. See
     the file "LICENSE_CSIRO_BSD_MIT.txt" for details.

     @TAG(CSIRO_BSD_MIT)
-->

<system>
    <modules>
        <module name="avr.build">
            <!-- this system can be customized with several options; defaults for Arduino UNO below
            <verbose>False</verbose>
            <mmcu>atmega328p</mmcu>
            <cpu_frequency>16000000</cpu_frequency>
            <baud>9600</baud>
            <debug>False</debug -->
            <arduino_library>rtos-gatria</arduino_library>
        </module>
        <module name="avr.rtos-gatria">
            <prefix>rtos</prefix>
            <taskid_size>8</taskid_size>
            <tasks>
                <task>
                    <name>a</name>
                    <function>task_a</function>
                    <stack_size>64</stack_size>
                </task>
                <task>
                    <name>b</name>
                    <function>task_b</function>
                    <stack_size>64</stack_size>
                </task>
                <task>
                    <name>c</name>
                    <function>task_c</function>
                    <stack_size>64</stack_size>
                </task>
            </tasks>
            <mutexes>
                <mutex>
                    <name>a</name>
                </mutex>
                <mutex>
                    <name>b</name>
                </mutex>
                <mutex>
                    <name>c</name>
                </mutex>
            </mutexes>
        </module>
        <module name="avr.context_switch"/>
        <module name="avr.gatria_arduino_defaults"/>
        <module name="avr.arduino_defaults"/>
    </modules>
</system>
